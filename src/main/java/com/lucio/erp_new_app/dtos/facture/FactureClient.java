package com.lucio.erp_new_app.dtos.facture;

import java.time.LocalDate;
import java.time.LocalDateTime;

import lombok.Data;

@Data
public class FactureClient {
    private String name;
    private String owner;
    private LocalDateTime creation;
    private LocalDateTime modified;
    private String modified_by;
    private int docstatus;
    private int idx;
    private String naming_series;
    private String customer;
    private String customer_name;
    private String tax_id;
    private String company;
    private String company_tax_id;
    private LocalDate posting_date;
    private String posting_time;
    private int set_posting_time;
    private LocalDate due_date;
    private int is_pos;
    private String pos_profile;
    private int is_consolidated;
    private int is_return;
    private String return_against;
    private int update_outstanding_for_self;
    private int update_billed_amount_in_sales_order;
    private int update_billed_amount_in_delivery_note;
    private int is_debit_note;
    private String amended_from;
    private String cost_center;
    private String project;
    private String currency;
    private double conversion_rate;
    private String selling_price_list;
    private String price_list_currency;
    private double plc_conversion_rate;
    private int ignore_pricing_rule;
    private String scan_barcode;
    private int update_stock;
    private String set_warehouse;
    private String set_target_warehouse;
    private double total_qty;
    private double total_net_weight;
    private double base_total;
    private double base_net_total;
    private double total;
    private double net_total;
    private String tax_category;
    private String taxes_and_charges;
    private String shipping_rule;
    private String incoterm;
    private String named_place;
    private double base_total_taxes_and_charges;
    private double total_taxes_and_charges;
    private double base_grand_total;
    private double base_rounding_adjustment;
    private double base_rounded_total;
    private String base_in_words;
    private double grand_total;
    private double rounding_adjustment;
    private int use_company_roundoff_cost_center;
    private double rounded_total;
    private String in_words;
    private double total_advance;
    private double outstanding_amount;
    private int disable_rounded_total;
    private String apply_discount_on;
    private double base_discount_amount;
    private String coupon_code;
    private int is_cash_or_non_trade_discount;
    private String additional_discount_account;
    private double additional_discount_percentage;
    private double discount_amount;
    private String other_charges_calculation;
    private double total_billing_hours;
    private double total_billing_amount;
    private String cash_bank_account;
    private double base_paid_amount;
    private double paid_amount;
    private double base_change_amount;
    private double change_amount;
    private String account_for_change_amount;
    private int allocate_advances_automatically;
    private int only_include_allocated_payments;
    private double write_off_amount;
    private double base_write_off_amount;
    private int write_off_outstanding_amount_automatically;
    private String write_off_account;
    private String write_off_cost_center;
    private int redeem_loyalty_points;
    private int loyalty_points;
    private double loyalty_amount;
    private String loyalty_program;
    private int dont_create_loyalty_points;
    private String loyalty_redemption_account;
    private String loyalty_redemption_cost_center;
    private String customer_address;
    private String address_display;
    private String contact_person;
    private String contact_display;
    private String contact_mobile;
    private String contact_email;
    private String territory;
    private String shipping_address_name;
    private String shipping_address;
    private String dispatch_address_name;
    private String dispatch_address;
    private String company_address;
    private String company_address_display;
    private String company_contact_person;
    private int ignore_default_payment_terms_template;
    private String payment_terms_template;
    private String tc_name;
    private String terms;
    private String po_no;
    private LocalDate po_date;
    private String debit_to;
    private String party_account_currency;
    private String is_opening;
    private String unrealized_profit_loss_account;
    private String against_income_account;
    private String sales_partner;
    private double amount_eligible_for_commission;
    private double commission_rate;
    private double total_commission;
    private String letter_head;
    private int group_same_items;
    private String select_print_heading;
    private String language;
    private String subscription;
    private LocalDate from_date;
    private LocalDate to_date;
    private String auto_repeat;
    private String status;
    private String inter_company_invoice_reference;
    private String represents_company;
    private String customer_group;
    private String utm_source;
    private String utm_campaign;
    private String utm_medium;
    private String utm_content;
    private int is_internal_customer;
    private int is_discounted;
    private String remarks;

    public void setIs_paid(int asInt) {
        throw new UnsupportedOperationException("Unimplemented method 'setIs_paid'");
    }
}
